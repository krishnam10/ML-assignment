import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load the dataset
url = "https://raw.githubusercontent.com/edyoda/data-science-complete-tutorial/master/Data/house_rental_data.csv"
data = pd.read_csv(url)

# Data preprocessing
# Check for missing values
print(data.isnull().sum())

# Check data types
print(data.dtypes)

# Explore categorical variables
categorical_cols = data.select_dtypes(include=['object']).columns
for col in categorical_cols:
    print(col, data[col].nunique())

# Encode categorical variables
data = pd.get_dummies(data, columns=categorical_cols, drop_first=True)

# Explore correlations
correlation_matrix = data.corr()
plt.figure(figsize=(12, 10))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap")
plt.show()

# Split data into features (X) and target (y)
X = data.drop('Rent', axis=1)
y = data['Rent']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model training
model = LinearRegression()
model.fit(X_train, y_train)

# Model evaluation
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
print("Root Mean Squared Error:", rmse)
