#Import the necessary libraries
import numpy as np
import pandas as pd
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report

#Load the Iris dataset:
data = load_iris()
X = pd.DataFrame(data.data, columns=data.feature_names)
y = pd.DataFrame(data.target, columns=['target'])

#Split the dataset into training and testing sets:
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

#Create and train the Decision Tree model:
clf = DecisionTreeClassifier(random_state=42)
clf.fit(X_train, y_train)

#Make predictions on the test set:
y_pred = clf.predict(X_test)

#Evaluate the model:
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

#We can also print a classification report for more details
report = classification_report(y_test, y_pred, target_names=data.target_names)
print("Classification Report:\n", report)

